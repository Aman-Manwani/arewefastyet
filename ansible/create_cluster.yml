# Copyright 2021 The Vitess Authors.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#    http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Clean Post Macrobench
  import_playbook: clean_macrobench.yml

- name: Build Vitess
  hosts: all
  roles:
    - vitess_build

- name: Start etcd
  hosts:
    - etcd
  roles:
    - role: etcd
      vars:
        - etcd_launch: True

- hosts: vtctld
  roles:
    - vtctld

- hosts: vtgate
  roles:
    - role: vtgate
      vars:
        - gateways_loadbalance: "{% set targets = [] -%}{% for host in groups['vtgate'] -%}{% for gateway in hostvars[host]['gateways'] -%}{{ targets.append( hostvars[host]['ansible_default_ipv4']['address']+':'+(gateway.mysql_port | default(13306) | string )) }}{% endfor -%}{% endfor -%}{{ targets }}"

- hosts: vttablet
  roles:
    - vttablet

- hosts: vtctld
  tasks:
    - name: Gather facts
      setup:
        gather_subset: network

- hosts: vtctld
  tasks:
    - name: print
      debug:
        msg: Groups {{ groups['vtctld'][0] }}

    - name: Ensure Primary
      shell: |
        alias vc="vtctlclient -server {{ groups['vtctld'][0] }}:15999"
        for keyspace in $(vc GetKeyspaces); do
            echo "working on ${keyspace}"
            for shard in $(vc FindAllShardsInKeyspace ${keyspace} | jq -r 'keys[]'); do
                echo "working on ${shard}"
                master=$(vc ListShardTablets ${keyspace}/${shard} | grep master)
                if [ -z "${master}" ]; then
                  echo "setting master for ${keyspace}/${shard}"
                  vc InitShardPrimary -force ${keyspace}/${shard} $(vc ListShardTablets ${keyspace}/${shard} | awk '{ print $1 }')
                else
                  vc SetReadWrite $(echo ${master} | awk '{ print $1 }')
                fi
            done
        done
      changed_when: false

    - name: Get VSchema for OLTP
      ansible.builtin.copy:
        src: "{{ macrobenchmark_vschema_oltp }}"
        dest: /tmp/vschema_sysbench.json
        mode: '0644'
      when: arewefastyet_execution_type == 'oltp'

    - name: Get VSchema for TPCC
      ansible.builtin.copy:
        src: "{{ macrobenchmark_vschema_tpcc }}"
        dest: /tmp/vschema_sysbench.json
        mode: '0644'
      when: arewefastyet_execution_type == 'tpcc'

    - name: Ensure VSchmea
      shell: |
        vtctlclient -server {{ groups['vtctld'][0] }}:15999 ApplyVSchema -vschema="$(cat /tmp/vschema_sysbench.json)" main
